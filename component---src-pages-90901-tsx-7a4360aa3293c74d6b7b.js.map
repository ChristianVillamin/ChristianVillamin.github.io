{"version":3,"sources":["webpack:///./src/90901/data/CommandLine.tsx","webpack:///./src/90901/data/TextFu.tsx","webpack:///./src/90901/data/UserManagement.tsx","webpack:///./src/90901/data/Permissions.tsx","webpack:///./src/90901/data/Processes.tsx","webpack:///./src/90901/data/Packages.tsx","webpack:///./src/90901/Grasshopper.tsx","webpack:///./src/pages/90901.tsx"],"names":["COMMAND_LINE","title","data","command","info","TEXT_FU","USER_MANAGEMENT","PERMISSIONS","PROCESSES","PACKAGES","Grasshopper","allCommands","GlobalStyle","Container","Title","href","map","commands","Commands","index","Item","key","id","TerminalLine","item","i","createGlobalStyle","styled","div","CheatSheet"],"mappings":"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","file":"component---src-pages-90901-tsx-7a4360aa3293c74d6b7b.js","sourcesContent":["import { Commands } from '../Grasshopper';\n\nexport const COMMAND_LINE: Commands = {\n  title: 'Command Line',\n  data: [\n    {\n      title: `echo`,\n      command: `echo {text}`,\n      info: `Prints the argument`,\n    },\n    {\n      title: `pwd (Print Working Directory)`,\n      command: `pwd`,\n      info: `Prints current directory`,\n    },\n    {\n      title: `cd (Change Directory)`,\n      command: [\n        `cd {absolutePath}`,\n        `cd ./{relativePath}`,\n        `cd ../{relativePath}`,\n        `cd ~/{relativePath}`,\n        `cd -/{relativePath}`,\n      ],\n      info: [\n        `Go to the desired path`,\n        `. is current directory`,\n        `.. is above directory`,\n        `~ is home directory`,\n        `- is previous directory`,\n      ],\n    },\n    {\n      title: `ls (List Directories)`,\n      command: [\n        `ls`,\n        `ls {path}`,\n        `ls -a {path}`,\n        `ls -l {path}`,\n        `ls -la {path}`,\n      ],\n      info: [\n        `Lists files and directories of current path`,\n        `List files and directories of target path`,\n        `List files and directories including hidden`,\n        `List files and directories in detail`,\n        `Combination of \"ls -a\" and \"ls -l\"`,\n      ],\n    },\n    {\n      title: `touch`,\n      command: `touch {fileName}`,\n      info: `Creates a new empty file`,\n    },\n    {\n      title: `file`,\n      command: `file {fileName}`,\n      info: `Check file type and show content`,\n    },\n    {\n      title: `cat (Concatenate)`,\n      command: `cat {fileNameA} {fileNameB}`,\n      info: `Shows contents of selected files`,\n    },\n    {\n      title: `less`,\n      command: `less {directory}`,\n      info: `Displays content in a paged manner`,\n    },\n    {\n      title: `history`,\n      command: `history`,\n      info: `Shows history of commands`,\n    },\n    {\n      title: `clear`,\n      command: `clear`,\n      info: `Clears the terminal`,\n    },\n    {\n      title: `cp (Copy)`,\n      command: [`cp {fileName} {directory}`, `cp *.{extension} {directory}`],\n      info: [\n        `Copies the file to the directory`,\n        `Copies all file with same extension`,\n      ],\n    },\n    {\n      title: `mv (Move)`,\n      command: [`mv {file} {directory}`, `mv {oldFile} {newFile}`],\n      info: [`Moves file to the directory`, `Renames the file`],\n    },\n    {\n      title: `mkdir (Make Directory)`,\n      command: `mkdir {folder1} {folder2} {...}`,\n      info: `Creates directories/folders`,\n    },\n    {\n      title: `rm (Remove)`,\n      command: [`rm {fileName}`, `rmdir {directoryName}`],\n      info: [`Removes a file`, `Removes a directory`],\n    },\n    {\n      title: `find`,\n      command: `find {path} {type} {fileName}`,\n      info: `Finds a file in a directory`,\n    },\n    {\n      title: `help`,\n      command: `help {command}`,\n      info: `Checks what the command is for and its flags`,\n    },\n    {\n      title: `man`,\n      command: `man {command}`,\n      info: `Checks what the command is for and its flags`,\n    },\n    {\n      title: `whatis`,\n      command: `whatis {command}`,\n      info: `Display one-line manual page descriptions`,\n    },\n    {\n      title: `alias`,\n      command: [`alias {name}='{command}'`, `unalias {name}`],\n      info: [`Create an alias for commands`, 'Removes the alias'],\n    },\n    {\n      title: `exit`,\n      command: `exit`,\n      info: `Exit from the shell`,\n    },\n  ],\n};\n","import { Commands } from '../Grasshopper';\n\nexport const TEXT_FU: Commands = {\n  title: 'Text-Fu',\n  data: [\n    {\n      title: `stdout (Standard Out)`,\n      command: [`echo {text} > {file}`, `echo {text} >> {file}`],\n      info: [`'>' redirects text to file`, `'>>' prevents overwritting`],\n    },\n    {\n      title: `stdin (Standard In)`,\n      command: `cat < {fileA} > {fileB}`,\n      info: `'<' as stdin gets '>' to target`,\n    },\n    {\n      title: `stderr (Standard Error)`,\n      command: [`ls /fake/dir > {file}`, `ls /fake/dir 2> {file}`],\n      info: [`Invalid, no directory`, `'2>' allows writes err message in file`],\n    },\n    {\n      title: `pipe and tee`,\n      command: [\n        `ls -la /etc`,\n        `ls -la /etc | less`,\n        `ls -la /etc | tee {file}`,\n      ],\n      info: [\n        `This is long and hard to read`,\n        `Pipe operator to attaches command`,\n        `'tee' allows different output streams`,\n      ],\n    },\n    {\n      title: `env (Environment)`,\n      command: `env`,\n      info: `Prints environment variables`,\n    },\n    {\n      title: `cut`,\n      command: `cut -c {n} {file}`,\n      info: `Prints nth character in each lines`,\n    },\n    {\n      title: `paste`,\n      command: `paste -s {file}`,\n      info: `Prints all content in one line`,\n    },\n    {\n      title: `head`,\n      command: `head {file}`,\n      info: `Prints the first 10 lines of a file`,\n    },\n    {\n      title: `tail`,\n      command: `tail {file}`,\n      info: `Prints the last 10 lines of a file`,\n    },\n    {\n      title: `expand and unexpand`,\n      command: [`expand {file}`, `unexpand -a {file}`],\n      info: [`Converts tabs to spaces`, `Converts spaces to tabs`],\n    },\n    {\n      title: `join and split`,\n      command: [`join {fileA} {fileB}`, `splt {file}`],\n      info: [\n        `Combines multiple files together`,\n        `Splits to new file every 1000th line`,\n      ],\n    },\n    {\n      title: `sort`,\n      command: [`sort {file}`, `sort -r {file}`, `sort -n {file}`],\n      info: [\n        `Sort lines by a-z order`,\n        `Sorts in reverse order`,\n        `Sorts by numerical value`,\n      ],\n    },\n    {\n      title: `translate`,\n      command: `tr [a-z] [A-Z] < {file}`,\n      info: `Capitalizes all characters`,\n    },\n    {\n      title: `uniq (Unique)`,\n      command: [`uniq {file}`, `uniq -u {file}`, `uniq -d {file}`],\n      info: [\n        `Removes duplicate values`,\n        `Gets unique values`,\n        `Gets duplicate values`,\n      ],\n    },\n    {\n      title: `wc (Word Count)`,\n      command: `wc {file}`,\n      info: `Checks the total count of words in a file`,\n    },\n    {\n      title: `nl (Number Lines)`,\n      command: `nl {file}`,\n      info: `Checks the total count of lines in a file`,\n    },\n    {\n      title: `grep`,\n      command: [`grep {value} {file}`, `grep -i {value} {file}`],\n      info: [\n        `Check if value exists in file`,\n        `Check again but case insensitive`,\n      ],\n    },\n  ],\n};\n","import { Commands } from '../Grasshopper';\n\nexport const USER_MANAGEMENT: Commands = {\n  title: 'User Management',\n  data: [\n    {\n      title: `sudo`,\n      command: [`cat /etc/shadow`, `sudo cat /etc/shadow`],\n      info: [\n        `Notice this denies permission`,\n        `'sudo' gives root access and allows`,\n      ],\n    },\n    {\n      title: `su`,\n      command: `su {command}`,\n      info: `Run 'sudo' via other identity. Not recommended`,\n    },\n    {\n      title: `/etc/passwd`,\n      command: `cat /etc/passwd`,\n      info: `List detailed information of users`,\n    },\n    {\n      title: `/etc/shadow`,\n      command: `sudo cat /etc/shadow`,\n      info: `User auth storage. Requires superuser.`,\n    },\n    {\n      title: `/etc/group`,\n      command: `cat /etc/group`,\n      info: `Allows different permission for different groups`,\n    },\n    {\n      title: `Adding Users`,\n      command: `sudo useradd {username}`,\n      info: `Adds a new user into the system`,\n    },\n    {\n      title: `Removing Users`,\n      command: `sudo userdel {username}`,\n      info: `Deletes the user from the system`,\n    },\n    {\n      title: `Changing Password`,\n      command: `sudo passwd {username}`,\n      info: `Changes a user's password`,\n    },\n  ],\n};\n","import { Commands } from '../Grasshopper';\n\nexport const PERMISSIONS: Commands = {\n  title: 'Permissions',\n  data: [\n    {\n      title: `chmod (Modifying Permissions)`,\n      command: [`chmod u+x {file}`, `chmod u-x {file}`],\n      info: [\n        `Adds executable permission for user`,\n        `Removes executable permission for user`,\n      ],\n    },\n    {\n      title: `chmod (Multiple Permissions)`,\n      command: `chmod ug+w {file}`,\n      info: `Adds multiple permission for user`,\n    },\n    {\n      title: `chmod (Numerical)`,\n      command: `chmod 755 {file}`,\n      info: `Grants all permission for user`,\n    },\n    {\n      title: `Modify User Ownership`,\n      command: `sudo chown {user} {file}`,\n      info: `Sets owner of file to user`,\n    },\n    {\n      title: `Modify Group Ownership`,\n      command: `sudo chgrp {group} {file}`,\n      info: `Sets the group of file to selected`,\n    },\n    {\n      title: `Modify user and group simultaneously`,\n      command: `sudo chown {user}:{group} {file}`,\n      info: `Does both modifier for the file`,\n    },\n    {\n      title: `Umask`,\n      command: `umask 021`,\n      info: `New files has all permissions granted`,\n    },\n    {\n      title: `Setuid`,\n      command: `passwd`,\n      info: `Change user password`,\n    },\n    {\n      title: `Setgid`,\n      command: `sudo chmod g+s {file}`,\n      info: `Allows to run as if a member of group.`,\n    },\n  ],\n};\n","import { Commands } from '../Grasshopper';\n\nexport const PROCESSES: Commands = {\n  title: 'Processes',\n  data: [\n    {\n      title: `ps (Processes)`,\n      command: [`ps`, `ps l`, `ps aux`],\n      info: [\n        `Shows the current processes`,\n        `Current processes in long format`,\n        `Current processes in detal`,\n      ],\n    },\n    {\n      title: `top`,\n      command: `top`,\n      info: `Shows real time information`,\n    },\n    {\n      title: `kill (Terminate)`,\n      command: `kill {processID}`,\n      info: `Sets owner of file to user`,\n    },\n    {\n      title: `Niceness`,\n      command: `nice -n {val} apt upgrade`,\n      info: `Sets priority value for new processes`,\n    },\n    {\n      title: `Renicing`,\n      command: `renice {val} -p {processID}`,\n      info: `Set priority for existing processes`,\n    },\n    {\n      title: `/proc filesystem`,\n      command: `cat /proc/{processID}/status`,\n      info: `Check process state information`,\n    },\n    {\n      title: `Job Control`,\n      command: `sleep {processID} &`,\n      info: `Allow process to run in background`,\n    },\n    {\n      title: `Background Jobs`,\n      command: `jobs`,\n      info: `Views all running jobs`,\n    },\n    {\n      title: `Background to Foreground`,\n      command: [`fg`, `fg %{jobId}`],\n      info: [`Switch to FG most recent job`, `Switch to FG selected job`],\n    },\n    {\n      title: `Kill Background Jobs`,\n      command: [`kill %1`, `kill $(jobs -p)`],\n      info: [`Terminate selected job`, `Terminate all jobs`],\n    },\n  ],\n};\n","import { Commands } from '../Grasshopper';\n\nexport const PACKAGES: Commands = {\n  title: 'Packages',\n  data: [\n    {\n      title: `gzip`,\n      command: `gzip {file}`,\n      info: `Compresses a file down`,\n    },\n    {\n      title: `gunzip`,\n      command: `gunzip {file}.gz`,\n      info: `Decompresses a .gz file`,\n    },\n    {\n      title: `Archiving with tar`,\n      command: `tar cvf {myTar}.tar {file1} {file2}`,\n      info: `Archive through tar`,\n    },\n    {\n      title: `Unpacking archives with tar`,\n      command: `tar xvf {myTar}.tar`,\n      info: `Extracts a tar acrhive`,\n    },\n    {\n      title: `Compressing archive with tar`,\n      command: `tar czf {myTar}.tar.gz`,\n      info: `Creates a compresses tar file`,\n    },\n    {\n      title: `Uncompress and unpack tar`,\n      command: `tar xzf {myTar}.tar`,\n      info: `e'X'tract all 'Z'ee 'F'iles :)`,\n    },\n    {\n      title: `dpkg (Debian Package)`,\n      command: [`dpkg -i {package}.deb`, `dpkg -r {package}.deb`],\n      info: [`Installs a debian package`, `Removes a debian package`],\n    },\n    {\n      title: `apt (Advanced Packaging Tool)`,\n      command: [`apt install {package}`, `apt remove {package}`],\n      info: [\n        `Installs package from a repository`,\n        `Removes package from a repository`,\n      ],\n    },\n    {\n      title: `List Debian Packages`,\n      command: `dpkg -l`,\n      info: `List installed debian packages`,\n    },\n    {\n      title: `Update Packages`,\n      command: `apt update; apt upgrade`,\n      info: `Updates repository packages`,\n    },\n    {\n      title: `Packages Information`,\n      command: `apt show {packageName}`,\n      info: `Check installed package information`,\n    },\n  ],\n};\n","import React from 'react';\nimport { COMMAND_LINE } from './data/CommandLine';\nimport { TEXT_FU } from './data/TextFu';\nimport { USER_MANAGEMENT } from './data/UserManagement';\nimport { PERMISSIONS } from './data/Permissions';\nimport { PROCESSES } from './data/Processes';\nimport { PACKAGES } from './data/Packages';\nimport styled, { createGlobalStyle } from 'styled-components';\n\nexport interface Commands {\n  title: string;\n  data: {\n    title: string;\n    command: string | string[];\n    info: string | string[];\n  }[];\n}\n\nexport const Grasshopper: React.FC = () => {\n  const allCommands: Commands[] = [\n    COMMAND_LINE,\n    TEXT_FU,\n    USER_MANAGEMENT,\n    PERMISSIONS,\n    PROCESSES,\n    PACKAGES,\n  ];\n\n  const colorizeArgument = (command: any) => {\n    let build = '';\n    const words: any = [];\n    for (let i = 0; i < command.length; i++) {\n      if (command[i] === '{') {\n        // console.log('dafuq');\n        for (let j = i + 1; j < command.length; j++) {\n          if (command[j] === '}') {\n            words.push(command.slice(i, j + 1));\n            i += j - i + 2;\n          }\n        }\n      }\n    }\n    // console.log('Words: ', words);\n    const open: any = command\n      .split('')\n      .map((e: any, i: any) => (e === '{' || e === '}' ? i : ''))\n      .filter(String);\n    const colored: any = [];\n    for (let i = 0; i < open.length; i += 2)\n      colored.push(\n        // <span className=\"coloredArg\">\n        command.slice(open[i], parseInt(open[i + 1]) + 1)\n        // </span>\n      );\n    build = '';\n    let counter = 0;\n    const others = [];\n    for (let i = 0; i < command.length; i++) {\n      if (i === open[0]) {\n        i += open[counter + 1] - open[counter];\n        others.push(build);\n        counter++;\n        build = '';\n      } else {\n        build += command[i];\n      }\n    }\n    if (build) others.push(build);\n    // console.log(open);\n    // console.log(others);\n    // const split = command.split('');\n    // return (\n    //   <>\n    //     {/* {split.map((char: any, index: any) => {\n    //       return char;\n    //     })} */}\n    //   </>\n    // );\n  };\n\n  return (\n    <>\n      <GlobalStyle />\n      <Container>\n        <Title>\n          <h4>\n            <a href=\"http://crxnvlmn.github.io/\">Christian Villamin</a> |\n            90/90/1 ( 2020 Q1 ) - January Deliverable\n          </h4>\n          <h1>Grasshopper</h1>\n          <h2>\n            <i>A linux journey... part one.</i>\n          </h2>\n        </Title>\n\n        {allCommands.map(commands => (\n          <Commands>\n            <h2>{commands.title}</h2>\n            {commands.data.map(({ title, command, info }, index) => (\n              <Item key={index}>\n                <div id=\"terminal\">\n                  <p id=\"command-title\">{title}</p>\n                </div>\n\n                <div id=\"terminal-body\">\n                  <div id=\"command\">\n                    {typeof command === 'string' ? (\n                      <TerminalLine>\n                        <p id=\"line-command\">\n                          <span id=\"dollar\">$</span> {command}\n                        </p>\n                        <p id=\"line-info\">{info}</p>\n                      </TerminalLine>\n                    ) : (\n                      command.map((item, i) => (\n                        <TerminalLine key={i}>\n                          <p id=\"line-command\">\n                            <span id=\"dollar\">$</span> {item}\n                          </p>\n                          <p id=\"line-info\">{info[i]}</p>\n                        </TerminalLine>\n                      ))\n                    )}\n                  </div>\n                </div>\n              </Item>\n            ))}\n          </Commands>\n        ))}\n        <div id=\"source-code\">\n          <a href=\"https://github.com/crxnvlmn/crxnvlmn.github.io/tree/develop/src/90901\">\n            Source Code\n          </a>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: 'Ubuntu', sans-serif;\n  }\n`;\n\nconst Container = styled.div<{}>`\n  border: 1px gray solid;\n  background: darkseagreen;\n\n  #source-code {\n    text-align: center;\n    border-top: 1px papayawhip dashed;\n    padding: 0.5rem;\n    font-size: 1.25rem;\n    background: firebrick;\n  }\n\n  a {\n    text-decoration: none;\n  }\n`;\n\nconst Title = styled.div<{}>`\n  text-align: center;\n  margin: 2rem;\n\n  h4 {\n    margin-bottom: 10px;\n    color: #333333;\n  }\n\n  h1 {\n    font-size: 12rem;\n    text-shadow: 0px 7px silver;\n    color: #333333;\n  }\n\n  h2 {\n    color: darkslategray;\n  }\n`;\n\nconst Commands = styled.div<{}>`\n  background: cadetblue;\n  width: 1100px;\n  text-align: center;\n  margin: 60px auto;\n  padding: 1rem;\n  border-radius: 2.5rem;\n  box-shadow: 0 7px 30px -10px rgba(150, 170, 180, 1);\n\n  h2 {\n    font-size: 4rem;\n    margin: 25px 0;\n    color: #333333;\n  }\n\n  #command-line {\n    text-align: center;\n  }\n\n  #commands-container {\n    text-align: center;\n    margin: 0 auto;\n    width: 100%;\n  }\n`;\n\nconst Item = styled.div<{}>`\n  display: inline-block;\n\n  margin: 0.5rem;\n  box-shadow: 0 4px 10px rgba(150, 170, 180, 0.5);\n  border-radius: 0.5rem 0.5rem 0 0;\n\n  #terminal {\n    padding: 0.25rem;\n    text-align: center;\n    background: silver;\n    border-radius: 0.5rem 0.5rem 0 0;\n    width: 500px;\n  }\n\n  #terminal-body {\n    padding: 0.25rem;\n\n    background-color: #272727;\n  }\n\n  #command-title {\n    margin-bottom: 0.25rem;\n  }\n\n  #command {\n    color: #bcdfff;\n    padding: 0.25rem;\n\n    border-bottom: 1px white dashed;\n  }\n\n  #command-info {\n    background-color: #eee;\n    padding: 0.25rem;\n  }\n`;\n\nconst TerminalLine = styled.div<{}>`\n  display: flex;\n  justify-content: space-between;\n\n  #dollar {\n    color: darkgray;\n    margin-left: 0.25rem;\n    margin-right: 0.4rem;\n  }\n\n  #line-info {\n    color: rgba(0, 128, 0, 0.85);\n    color: seagreen;\n  }\n`;\n","import React from 'react';\nimport { Grasshopper } from '../90901/Grasshopper';\n\nconst CheatSheet: React.FC = () => {\n  return <Grasshopper />;\n};\n\nexport default CheatSheet;\n"],"sourceRoot":""}